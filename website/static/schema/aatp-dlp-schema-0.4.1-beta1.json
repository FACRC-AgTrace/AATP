{
  "type": "object",
  "additionalProperties": true,
  "properties": {
    "type": {
      "type": "array",
      "readOnly": true,
      "default": [
        "DigitalLivestockPassport",
        "DigitalProductPassport",
        "VerifiableCredential"
      ],
      "items": {
        "type": "string"
      },
      "allOf": [
        {
          "contains": {
            "const": "DigitalLivestockPassport",
            "minContains": 1
          }
        },
        {
          "contains": {
            "const": "DigitalProductPassport",
            "minContains": 1
          }
        },
        {
          "contains": {
            "const": "VerifiableCredential",
            "minContains": 1
          }
        }
      ]
    },
    "@context": {
      "example": [
        "https://www.w3.org/ns/credentials/v2",
        "https://test.uncefact.org/vocabulary/untp/dpp/dpp-context.jsonld"
      ],
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "A list of JSON-LD context URIs that define the semantic meaning of properties within the credential. ",
      "readOnly": true,
      "prefixItems": [
        {
          "const": "https://www.w3.org/ns/credentials/v2",
          "type": "string"
        },
        {
          "const": "https://test.uncefact.org/vocabulary/untp/dpp/0.6.0-beta7/",
          "type": "string"
        },
        {
          "const": "https://aatp.foodagility.com/context/aatp-dlp-context-0.4.1-beta1.jsonld",
          "type": "string"
        }
      ],
      "default": [
        "https://www.w3.org/ns/credentials/v2",
        "https://test.uncefact.org/vocabulary/untp/dpp/0.6.0-beta7/",
        "https://aatp.foodagility.com/context/aatp-dlp-context-0.4.1-beta1.jsonld"
      ],
      "minItems": 3,
      "uniqueItems": true
    },
    "id": {
      "example": "https://example-company.com/credentials/2a423366-a0d6-4855-ba65-2e0c926d09b0",
      "type": "string",
      "format": "uri",
      "description": "A unique identifier (URI) assigned to the product passport. May be a UUID"
    },
    "issuer": {
      "$ref": "#/$defs/CredentialIssuer",
      "description": "The organisation that is the issuer of this VC. Note that the \"id\" property MUST be a W3C DID.  Other identifiers such as tax registration numbers can be listed in the \"otherIdentifiers\" property."
    },
    "validFrom": {
      "pattern": "^-?([1-9][0-9]{3,}|0[0-9]{3})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\\\.[0-9]+)?|(24:00:00(\\\\.0+)?))(Z|(\\\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
      "example": "2024-03-15T12:00:00Z",
      "type": "string",
      "format": "date-time",
      "description": "The date and time from which the credential is valid."
    },
    "validUntil": {
      "pattern": "^-?([1-9][0-9]{3,}|0[0-9]{3})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\\\.[0-9]+)?|(24:00:00(\\\\.0+)?))(Z|(\\\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
      "example": "2034-03-15T12:00:00Z",
      "type": "string",
      "format": "date-time",
      "description": "The expiry date (if applicable) of this verifiable credential."
    },
    "credentialSubject": {
      "$ref": "#/$defs/BovineAnimal",
      "description": "The animal record that is the subject of this digital livestock passport. "
    }
  },
  "description": "A digital livestock passport (Cattle) as a verifiable credential. ",
  "required": ["@context", "id", "issuer"],
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$defs": {
    "CredentialIssuer": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["CredentialIssuer"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "CredentialIssuer",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "did:web:identifiers.example-company.com:12345",
          "type": "string",
          "format": "uri",
          "description": "The W3C DID of the issuer - should be a did:web or did:tdw"
        },
        "name": {
          "example": "Example Company Pty Ltd",
          "type": "string",
          "description": "The name of the issuer person or organisation"
        },
        "issuerAlsoKnownAs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "example": "https://abr.business.gov.au/ABN/View?abn=90664869327",
                "type": "string",
                "format": "uri",
                "description": "The globally unique ID of the party as a URI, ideally as a resolvable ID. "
              },
              "name": {
                "example": "Sample Company Pty Ltd.",
                "type": "string",
                "description": "The registered name of the party within the identifier scheme."
              },
              "registeredId": {
                "example": 90664869327,
                "type": "string",
                "description": "The registration number (alphanumeric) of the Party within the register. Unique within the register."
              }
            },
            "required": ["id", "name"]
          },
          "description": "An optional list of other registered identifiers for this credential issuer "
        }
      },
      "description": "The issuer party (person or organisation) of a verifiable credential.",
      "required": ["id", "name"]
    },
    "BovineAnimal": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["BovineAnimal", "Product"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "BovineAnimal",
                "minContains": 1
              }
            },
            {
              "contains": {
                "const": "Product",
                "minContains": 1
              }
            },
            {
              "contains": {
                "const": "Product",
                "minContains": 1
              }
            }
          ]
        },
        "idScheme": {
          "$ref": "#/$defs/IdentifierScheme",
          "description": "The identifier scheme for this product.  Eg a GS1 GTIN or an AU Livestock NLIS, or similar. If self issued then use the party ID of the issuer.  "
        },
        "productImage": {
          "$ref": "#/$defs/Link",
          "description": "Reference information (location, type, name) of an image of the product."
        },
        "productCategory": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Classification"
          },
          "description": "A code representing the product's class, typically using the UN CPC (United Nations Central Product Classification) https://unstats.un.org/unsd/classifications/Econ/cpc"
        },
        "furtherInformation": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Link"
          },
          "description": "A URL pointing to further human readable information about the product."
        },
        "countryOfProduction": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
          "description": "The country in which this item was produced / manufactured.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
        },
        "id": {
          "example": "https://nlis.com.au/QDBH0132XBS01234",
          "type": "string",
          "format": "uri",
          "description": "The NLIS ID of the animal as a full resolvable URI"
        },
        "name": {
          "example": "Angus, grass fed, 2024",
          "type": "string",
          "description": "The registered name of the product within the identifier scheme. "
        },
        "registeredId": {
          "example": "QDBH0132XBS01234",
          "type": "string",
          "description": "The NLIS ID of the Animal"
        },
        "batchNumber": {
          "example": "Mob-2024-12",
          "type": "string",
          "description": "Identifier of the specific production batch of the product.  Unique within the product class."
        },
        "description": {
          "example": "Fresh from the family farm at the foothills of the Snowy Mountains. All cattle are single-origin, grass-fed, antibiotic and hormone-free.",
          "type": "string",
          "description": "A textual description providing details about the product."
        },
        "producedByParty": {
          "$ref": "#/$defs/Party",
          "description": "The business name and ABN that owns the farm that is the producer (birth) of the animal."
        },
        "producedAtFacility": {
          "$ref": "#/$defs/Facility",
          "description": "The farm name and identifier (usually a PIC - Property Identification Code) of the farm that produced the animal."
        },
        "productionDate": {
          "example": "2024-04-25",
          "type": "string",
          "format": "date",
          "description": "The birth date of the animal."
        },
        "granularityLevel": {
          "type": "string",
          "enum": ["item", "batch", "model"],
          "example": "item",
          "description": "Code to indicate the granularity of this digital product passport - item level, batch level or product class level."
        },
        "conformityClaim": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Claim"
          },
          "description": "An array of claim objects representing various product conformity claims about the product / batch.  These can be sustainability claims, circularity claims, or any other claim type within the conformity topic list."
        },
        "emissionsScorecard": {
          "$ref": "#/$defs/EmissionsPerformance",
          "description": "The emissions scorecard for this animal in accordance witht he GHG protocol"
        },
        "traceabilityInformation": {
          "$ref": "#/$defs/TraceabilityPerformance",
          "description": "An array of traceability events grouped by value chain process.  Where actual traceability events are unavailable or carry sensitive information, passport publishers may specify the extent to which the traceability information has been independently verified. "
        },
        "characteristics": {
          "$ref": "#/$defs/BovineCharcteristics",
          "description": "Bovine characteristcs at the date of livestock passport issue - terminology from MLA National Livestiock Guidelines 2022 - https://www.ausmeat.com.au/media/1521/mla-national-livestock-guidelines-2022-web_final_291122.pdf.  "
        },
        "healthTreatment": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/HealthTreatment"
          },
          "description": "A list of animal health treatment records. "
        }
      },
      "description": "A bovine animal record - including ",
      "required": ["id", "name"]
    },
    "IdentifierScheme": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["IdentifierScheme"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "IdentifierScheme",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://id.gs1.org/01/",
          "type": "string",
          "format": "uri",
          "description": "The globally unique identifier of the registration scheme. The scheme should be registered and discoverable from vocabulary.uncefact.org/identifierSchemes"
        },
        "name": {
          "example": "Global Trade Identification Number (GTIN)",
          "type": "string",
          "description": "The name of the identifier scheme. "
        }
      },
      "description": "An identifier registration scheme for products, facilities, or organisations. Typically operated by a state, national or global authority."
    },
    "Link": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Link"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Link",
                "minContains": 1
              }
            }
          ]
        },
        "linkURL": {
          "example": "https://files.example-certifier.com/1234567.json",
          "type": "string",
          "format": "uri",
          "description": "The URL of the target resource. "
        },
        "linkName": {
          "example": "GBA rule book conformity certificate",
          "type": "string",
          "description": "A display name for the target resource "
        },
        "linkType": {
          "example": "https://test.uncefact.org/vocabulary/linkTypes/dcc",
          "type": "string",
          "description": "The type of the target resource - drawn from a controlled vocabulary "
        }
      },
      "description": "A structure to provide a URL link plus metadata associated with the link."
    },
    "Classification": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Classification"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Classification",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://unstats.un.org/unsd/classifications/Econ/cpc/46410",
          "type": "string",
          "format": "uri",
          "description": "The globally unique URI representing the specific classifier value"
        },
        "code": {
          "example": 46410,
          "type": "string",
          "description": "classification code within the scheme"
        },
        "name": {
          "example": "Primary cells and primary batteries",
          "type": "string",
          "description": "Name of the classification represented by the code"
        },
        "schemeID": {
          "example": "https://unstats.un.org/unsd/classifications/Econ/cpc/",
          "type": "string",
          "format": "uri",
          "description": "Classification scheme ID"
        },
        "schemeName": {
          "example": "UN Central Product Classification (CPC)",
          "type": "string",
          "description": "The name of the classification scheme"
        }
      },
      "description": "A classification scheme and code / name representing a category value for a product, entity, or facility.",
      "required": ["id", "name"]
    },
    "Party": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Party"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Party",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://abr.business.gov.au/ABN/View?abn=90664869327",
          "type": "string",
          "format": "uri",
          "description": "The globally unique ID of the party as a URI, ideally as a resolvable ID. "
        },
        "name": {
          "example": "Sample Company Pty Ltd.",
          "type": "string",
          "description": "The registered name of the party within the identifier scheme."
        },
        "registeredId": {
          "example": 90664869327,
          "type": "string",
          "description": "The registration number (alphanumeric) of the Party within the register. Unique within the register."
        },
        "idScheme": {
          "$ref": "#/$defs/IdentifierScheme",
          "description": "The identifier scheme of the party.  Typically a national business register or a global scheme such as GLEIF. "
        },
        "description": {
          "example": "A leading electric energy storage company",
          "type": "string",
          "description": "An optional short description of the party."
        },
        "registrationCountry": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
          "description": "the country in which this organisation is registered\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
        },
        "organisationWebsite": {
          "example": "https://example-company.com",
          "type": "string",
          "format": "uri",
          "description": "Website for this organisation"
        },
        "industryCategory": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Classification"
          },
          "description": "The industry categories for this organisations.  Recommend use of UNCPC as the category scheme. for example - unstats.un.org/isic/1030"
        },
        "partyAlsoKnownAs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "example": "https://abr.business.gov.au/ABN/View?abn=90664869327",
                "type": "string",
                "format": "uri",
                "description": "The globally unique ID of the party as a URI, ideally as a resolvable ID. "
              },
              "name": {
                "example": "Sample Company Pty Ltd.",
                "type": "string",
                "description": "The registered name of the party within the identifier scheme."
              },
              "registeredId": {
                "example": 90664869327,
                "type": "string",
                "description": "The registration number (alphanumeric) of the Party within the register. Unique within the register."
              }
            },
            "required": ["id", "name"]
          },
          "description": "An optional list of other registered identifiers for this organisation. For example DUNS, GLN, LEI, etc"
        }
      },
      "description": "An organisation.  May be a supply chain actor, a certifier, a government agency.",
      "required": ["id", "name"]
    },
    "Facility": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Facility"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Facility",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://sample-facility-register.com/1234567",
          "type": "string",
          "format": "uri",
          "description": "The globally unique ID of the facility as URI, ideally as a resolvable URL."
        },
        "name": {
          "example": "Greenacres battery factory",
          "type": "string",
          "description": "The registered name of the facility within the identifier scheme.  "
        },
        "registeredId": {
          "example": 1234567,
          "type": "string",
          "description": "The registration number (alphanumeric) of the facility within the identifier scheme. Unique within the register."
        },
        "idScheme": {
          "$ref": "#/$defs/IdentifierScheme",
          "description": "The ID scheme of the facility. eg a GS1 GLN or a National land registry scheme. If self issued then use the party ID of the facility owner. "
        },
        "description": {
          "example": "Manufacturing site for advanced electric vehicle batteries.",
          "type": "string",
          "description": "An optional short description of the facility"
        },
        "countryOfOperation": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
          "description": "The country in which this facility is operating.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
        },
        "processCategory": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Classification"
          },
          "description": "The industrial or production processes performed by this facility. Example unstats.un.org/isic/1030."
        },
        "operatedByParty": {
          "type": "object",
          "properties": {
            "id": {
              "example": "https://abr.business.gov.au/ABN/View?abn=90664869327",
              "type": "string",
              "format": "uri",
              "description": "The globally unique ID of the party as a URI, ideally as a resolvable ID. "
            },
            "name": {
              "example": "Sample Company Pty Ltd.",
              "type": "string",
              "description": "The registered name of the party within the identifier scheme."
            },
            "registeredId": {
              "example": 90664869327,
              "type": "string",
              "description": "The registration number (alphanumeric) of the Party within the register. Unique within the register."
            }
          },
          "required": ["id", "name"],
          "description": "The Party entity responsible for operating the facility.An object structure that uniquely identifies the party within a known party identification scheme. "
        },
        "facilityAlsoKnownAs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "example": "https://sample-facility-register.com/1234567",
                "type": "string",
                "format": "uri",
                "description": "The globally unique ID of the facility as URI, ideally as a resolvable URL."
              },
              "name": {
                "example": "Greenacres battery factory",
                "type": "string",
                "description": "The registered name of the facility within the identifier scheme.  "
              },
              "registeredId": {
                "example": 1234567,
                "type": "string",
                "description": "The registration number (alphanumeric) of the facility within the identifier scheme. Unique within the register."
              }
            },
            "required": ["id", "name"]
          },
          "description": "An optional list of other registered identifiers for this facility - eg GLNs or other schemes."
        },
        "locationInformation": {
          "$ref": "#/$defs/Location",
          "description": "Geo-location information for this facility as a resolvable geographic area (a Plus Code), and/or a geo-located point (latitude / longitude), and/or a defined boundary (GeoJSON Polygon)."
        },
        "address": {
          "$ref": "#/$defs/Address",
          "description": "The Postal address of the location."
        }
      },
      "description": "The physical site (eg farm or factory) where the product or materials was produced.",
      "required": ["id", "name"]
    },
    "Location": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Location"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Location",
                "minContains": 1
              }
            }
          ]
        },
        "plusCode": {
          "example": "https://plus.codes/8CGRC78W+MM",
          "type": "string",
          "format": "uri",
          "description": "An open location code (https://maps.google.com/pluscodes/) representing this geographic location or region. Open location codes can represent any sized area from a point to a large region and are easily resolved to a visual map location. "
        },
        "geoLocation": {
          "$ref": "#/$defs/Point",
          "description": "The latitude and longitude coordinates that best represent the specified location. Using GeoJSON Point notation."
        },
        "geoBoundary": {
          "$ref": "#/$defs/Polygon",
          "description": "The list of ordered coordinates that define a closed area polygon as a location boundary using GeoJSON polygon notation."
        }
      },
      "description": "Location information including address and geo-location of points, areas, and boundaries"
    },
    "Point": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Point"],
          "example": "Point",
          "description": ""
        },
        "coordinates": {
          "$ref": "#/$defs/Point3D",
          "description": "Coordinates property of type Point3D"
        }
      },
      "description": "Represents a Point geometry",
      "required": ["type"]
    },
    "Point3D": {
      "description": "Point in 3d space",
      "oneOf": [
        {
          "type": "array",
          "readOnly": true,
          "default": ["Point3D"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Point3D",
                "minContains": 1
              }
            }
          ]
        },
        {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "description": "Array of decimal values"
        }
      ]
    },
    "Polygon": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Polygon"],
          "example": "Polygon",
          "description": ""
        },
        "coordinates": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Point3DWrapper"
          },
          "description": "Array of PolygonCoordinates"
        }
      },
      "description": "Represents a Polygon geometry",
      "required": ["type"]
    },
    "Point3DWrapper": {
      "description": "",
      "oneOf": [
        {
          "type": "array",
          "readOnly": true,
          "default": ["Point3DWrapper"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Point3DWrapper",
                "minContains": 1
              }
            }
          ]
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Point3D"
          },
          "description": ""
        }
      ]
    },
    "Address": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Address"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Address",
                "minContains": 1
              }
            }
          ]
        },
        "streetAddress": {
          "example": "level 11, 15 London Circuit",
          "type": "string",
          "description": "the street address as an unstructured string."
        },
        "postalCode": {
          "example": 2601,
          "type": "string",
          "description": "The postal code or zip code for this address."
        },
        "addressLocality": {
          "example": "Acton",
          "type": "string",
          "description": "The city, suburb or township name."
        },
        "addressRegion": {
          "example": "ACT",
          "type": "string",
          "description": "The state or territory or province"
        },
        "addressCountry": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
          "description": "The address country as an ISO-3166 two letter country code.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
        }
      },
      "description": "A postal address."
    },
    "Claim": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Claim", "Declaration"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Claim",
                "minContains": 1
              }
            },
            {
              "contains": {
                "const": "Declaration",
                "minContains": 1
              }
            }
          ]
        },
        "assessmentDate": {
          "example": "2024-03-15",
          "type": "string",
          "format": "date",
          "description": "The date on which this assessment was made. "
        },
        "id": {
          "example": "https://products.example-company.com/09520123456788/declarations/12345",
          "type": "string",
          "format": "uri",
          "description": "A unique identifier for the declaration. Often this will be an extension of the product.id or attestation.id. But could be a UUID."
        },
        "referenceStandard": {
          "$ref": "#/$defs/Standard",
          "description": "The reference to the standard that defines the specification / criteria"
        },
        "referenceRegulation": {
          "$ref": "#/$defs/Regulation",
          "description": "The reference to the regulation that defines the assessment criteria"
        },
        "assessmentCriteria": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Criterion"
          },
          "description": "The specification against which the assessment is made."
        },
        "declaredValue": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Metric"
          },
          "description": "The list of specific values measured as part of this assessment (eg tensile strength)"
        },
        "conformance": {
          "example": true,
          "type": "boolean",
          "description": "An indicator of whether or not the claim or assesment conforms to the regulatory or standard criteria."
        },
        "conformityTopic": {
          "type": "string",
          "enum": [
            "environment.energy",
            "environment.emissions",
            "environment.water",
            "environment.waste",
            "environment.deforestation",
            "environment.biodiversity",
            "circularity.content",
            "circularity.design",
            "social.labour",
            "social.rights",
            "social.community",
            "social.safety",
            "governance.ethics",
            "governance.compliance",
            "governance.transparency"
          ],
          "example": "environment.energy",
          "description": "The conformity topic category for this assessment (eg vocabulary.uncefact.org/sustainability/emissions)"
        },
        "conformityEvidence": {
          "$ref": "#/$defs/SecureLink",
          "description": "A URI pointing to the evidence supporting the claim. SHOULD be a URL to a UNTP Digital Conformity Credential (DCC)"
        }
      },
      "description": "A declaration of conformance with one or more criteria from a specific standard or regulation.  ",
      "required": ["id", "conformance", "conformityTopic"]
    },
    "Standard": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Standard"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Standard",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://www.globalbattery.org/media/publications/gba-rulebook-v2.0-master.pdf",
          "type": "string",
          "format": "uri",
          "description": "A unique identifier for the standard (eg https://www.iso.org/standard/60857.html)."
        },
        "name": {
          "example": "GBA Battery Passport Greenhouse Gas Rulebook - V.2.0",
          "type": "string",
          "description": "The name of the standard"
        },
        "issuingParty": {
          "type": "object",
          "properties": {
            "id": {
              "example": "https://abr.business.gov.au/ABN/View?abn=90664869327",
              "type": "string",
              "format": "uri",
              "description": "The globally unique ID of the party as a URI, ideally as a resolvable ID. "
            },
            "name": {
              "example": "Sample Company Pty Ltd.",
              "type": "string",
              "description": "The registered name of the party within the identifier scheme."
            },
            "registeredId": {
              "example": 90664869327,
              "type": "string",
              "description": "The registration number (alphanumeric) of the Party within the register. Unique within the register."
            }
          },
          "required": ["id", "name"],
          "description": "The party that issued the standard "
        },
        "issueDate": {
          "example": "2023-12-05",
          "type": "string",
          "format": "date",
          "description": "The date when the standard was issued."
        }
      },
      "description": "A standard (eg ISO 14000) that specifies the criteria for conformance.",
      "required": ["issuingParty"]
    },
    "Regulation": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Regulation"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Regulation",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://www.legislation.gov.au/F2008L02309/latest/versions",
          "type": "string",
          "format": "uri",
          "description": "The globally unique identifier of this regulation. "
        },
        "name": {
          "example": "NNational Greenhouse and Energy Reporting (Measurement) Determination",
          "type": "string",
          "description": "The name of the regulation or act."
        },
        "jurisdictionCountry": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
          "description": "The legal jurisdiction (country) under which the regulation is issued.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
        },
        "administeredBy": {
          "type": "object",
          "properties": {
            "id": {
              "example": "https://abr.business.gov.au/ABN/View?abn=90664869327",
              "type": "string",
              "format": "uri",
              "description": "The globally unique ID of the party as a URI, ideally as a resolvable ID. "
            },
            "name": {
              "example": "Sample Company Pty Ltd.",
              "type": "string",
              "description": "The registered name of the party within the identifier scheme."
            },
            "registeredId": {
              "example": 90664869327,
              "type": "string",
              "description": "The registration number (alphanumeric) of the Party within the register. Unique within the register."
            }
          },
          "required": ["id", "name"],
          "description": "the issuing body of the regulation. For example Australian Government Department of Climate Change, Energy, the Environment and Water"
        },
        "effectiveDate": {
          "example": "2024-03-20",
          "type": "string",
          "format": "date",
          "description": "the date at which the regulation came into effect."
        }
      },
      "description": "A regulation (eg EU deforestation regulation) that defines the criteria for assessment.",
      "required": ["administeredBy"]
    },
    "Criterion": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Criterion"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Criterion",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://www.globalbattery.org/media/publications/gba-rulebook-v2.0-master.pdf#BatteryAssembly",
          "type": "string",
          "format": "uri",
          "description": "A unique identifier for the criterion within the standard  or regulation. For example CO2 emissions calculations for liquid fuel combustion."
        },
        "name": {
          "example": "GBA Battery rule book v2.0 battery assembly guidelines.",
          "type": "string",
          "description": "A name that describes this criteria."
        },
        "thresholdValues": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Metric"
          },
          "description": "A conformity threshold defined by the specification (eg minimum compressive strength) "
        }
      },
      "description": "A specific rule or criterion within a standard or regulation. eg a carbon intensity calculation rule within an emissions standard.",
      "required": ["id", "name"]
    },
    "Metric": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Metric"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Metric",
                "minContains": 1
              }
            }
          ]
        },
        "metricName": {
          "example": "GHG emissions intensity",
          "type": "string",
          "description": "A human readable name for this metric (for example \"Tensile strength\")"
        },
        "metricValue": {
          "$ref": "#/$defs/Measure",
          "description": "A numeric value and unit of measure for this metric. Could be a measured value or a specified threshold. Eg {\"value\":400, \"unit\":\"MPA\"} as tensile strength of structural steel"
        },
        "score": {
          "example": "BB",
          "type": "string",
          "description": "A score or rank associated with this measured metric."
        },
        "accuracy": {
          "example": 0.05,
          "type": "number",
          "description": "A percentage represented as a numeric between 0 and 1 indicating the rage of accuracy of the claimed value (eg 0.05 means that the actual value is within 5% of the claimed value.)"
        }
      },
      "description": "A specific measure of performance against the criteria that governs the claim.  Expressed as an array of metric (ie unit of measure) / value (ie the actual numeric value) pairs.  ",
      "required": ["metricName", "metricValue"]
    },
    "Measure": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["Measure"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Measure",
                "minContains": 1
              }
            }
          ]
        },
        "value": {
          "example": 10,
          "type": "number",
          "description": "The numeric value of the measure"
        },
        "unit": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
          "description": "Unit of measure drawn from the UNECE Rec20 measure code list.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode\n    "
        }
      },
      "description": "The measure class defines a numeric measured value (eg 10) and a coded unit of measure (eg KG).",
      "required": ["value", "unit"]
    },
    "SecureLink": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["SecureLink", "Link"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "SecureLink",
                "minContains": 1
              }
            },
            {
              "contains": {
                "const": "Link",
                "minContains": 1
              }
            }
          ]
        },
        "linkURL": {
          "example": "https://files.example-certifier.com/1234567.json",
          "type": "string",
          "format": "uri",
          "description": "The URL of the target resource. "
        },
        "linkName": {
          "example": "GBA rule book conformity certificate",
          "type": "string",
          "description": "A display name for the target resource "
        },
        "linkType": {
          "example": "https://test.uncefact.org/vocabulary/linkTypes/dcc",
          "type": "string",
          "description": "The type of the target resource - drawn from a controlled vocabulary "
        },
        "hashDigest": {
          "example": "6239119dda5bd4c8a6ffb832fe16feaa5c27b7dba154d24c53d4470a2c69adc2",
          "type": "string",
          "description": "The hash of the file."
        },
        "hashMethod": {
          "type": "string",
          "enum": ["SHA-256", "SHA-1"],
          "example": "SHA-256",
          "description": "The hashing algorithm used to create the target hash.  SHA-265 is the recommended standard"
        },
        "encryptionMethod": {
          "type": "string",
          "enum": ["none", "AES"],
          "example": "none",
          "description": "The symmetric encryption algorithm used to encrypt the link target.  AES is the recommended standard. Decryption keys are expected to be passed out of bounds."
        }
      },
      "description": "A binary file that is hashed ()for tamper evidence) and optionally encrypted (for confidentiality)."
    },
    "EmissionsPerformance": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["EmissionsPerformance"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "EmissionsPerformance",
                "minContains": 1
              }
            }
          ]
        },
        "carbonFootprint": {
          "example": 1.8,
          "type": "number",
          "format": "float",
          "description": "The carbon footprint of the product in KgCO2e per declared unit."
        },
        "declaredUnit": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
          "description": "The unit of product (EA, KGM, LTR, etc) that is the basis for carbon footprint.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode\n    "
        },
        "operationalScope": {
          "type": "string",
          "enum": ["None", "CradleToGate", "CradleToGrave"],
          "example": "None",
          "description": "The operational scope of the emissions performance. Only scope 1 & 2, or including upstream scope 3 (cradle to gate) or upstream and downstream scope 3 (cradle to grave)."
        },
        "primarySourcedRatio": {
          "example": 0.3,
          "type": "number",
          "format": "float",
          "description": "The ratio of emissions data from primary sources (ie from supplier / product specific information rather than secondary / industry averages)."
        },
        "reportingStandard": {
          "$ref": "#/$defs/Standard",
          "description": "The reporting standard (eg GHG Protocol, IFRS S2, ESRS, etc) against which this product emissions performance is assessed."
        }
      },
      "description": "Product specific characteristics.  This class is an extension point for industry specific product characteristics or performance information such as clothing size or battery capacity.",
      "required": [
        "carbonFootprint",
        "declaredUnit",
        "operationalScope",
        "primarySourcedRatio"
      ]
    },
    "TraceabilityPerformance": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["TraceabilityPerformance"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "TraceabilityPerformance",
                "minContains": 1
              }
            }
          ]
        },
        "valueChainProcess": {
          "example": "Spinning",
          "type": "string",
          "description": "Human readable name for the industry specific value chain process representing this traceability data set."
        },
        "verifiedRatio": {
          "example": 0.5,
          "type": "number",
          "description": "The proportion (0 to 1) of materials in this value chain process that have been  traced using verifiable traceability event."
        },
        "traceabilityEvent": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/SecureLink"
          },
          "description": "A list of secure links to digital traceability events that support this traceability performance statement. May be encrypted for confidentiality purposes. "
        }
      },
      "description": "An array of secure links to TraceabilityEvent objects detailing EPCIS events related to the traceability of the product batch. Events are grouped by value chain process (eg \"Weaving\" in textiles supply chain)."
    },
    "BovineCharcteristics": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["BovineCharcteristics"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "BovineCharcteristics",
                "minContains": 1
              }
            }
          ]
        },
        "sex": {
          "type": "string",
          "enum": ["M", "F"],
          "example": "M",
          "description": "The sex of the animal."
        },
        "sexCharacteristic": {
          "type": "string",
          "enum": [
            "HY",
            "C",
            "CSP",
            "HC",
            "H",
            "HSP",
            "BY",
            "SC",
            "S",
            "V",
            "MFV",
            "BC",
            "B",
            "SY",
            "RV"
          ],
          "example": "HY",
          "description": "Characteristic based on sex and age. Eg HY for yearling heiffer"
        },
        "breed": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AA",
              "AB",
              "AF",
              "AK",
              "AL",
              "AN",
              "AU",
              "AY",
              "BA",
              "BB",
              "BC",
              "BE",
              "BF",
              "BG",
              "BH",
              "BJ",
              "BK",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BU",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CB",
              "CC",
              "CD",
              "CF",
              "CI",
              "CN",
              "DD",
              "DK",
              "DM",
              "DR",
              "DS",
              "DX",
              "FF",
              "FS",
              "GA",
              "GC",
              "GG",
              "GM",
              "GV",
              "HH",
              "HI",
              "HU",
              "HV",
              "IB",
              "IS",
              "JJ",
              "KA",
              "KW",
              "LB",
              "LH",
              "LL",
              "LR",
              "LU",
              "MA",
              "MD",
              "MG",
              "MH",
              "MI",
              "MO",
              "MS",
              "MU",
              "MZ",
              "NG",
              "NL",
              "NO",
              "OO",
              "OZ",
              "PH",
              "PM",
              "PR",
              "PT",
              "PU",
              "PZ",
              "QL",
              "RA",
              "RB",
              "RC",
              "RF",
              "RO",
              "RP",
              "RS",
              "RV",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SK",
              "SL",
              "SM",
              "SN",
              "SP",
              "SQ",
              "SR",
              "SS",
              "ST",
              "SU",
              "SV",
              "SW",
              "TA",
              "TC",
              "TH",
              "TI",
              "TN",
              "TP",
              "TS",
              "TX",
              "UR",
              "UU",
              "WA",
              "WB",
              "WY",
              "XA",
              "XD",
              "XH",
              "XK",
              "XM",
              "XR",
              "XS",
              "XT",
              "XX",
              "XY",
              "ZE"
            ]
          },
          "example": "AA",
          "description": "Breed code array.  Single code for pure bred cattle. List each breed for mixed breeds. eg [\"AA\"] represewnts pure bred Angus."
        },
        "liveWeight": {
          "example": 350,
          "type": "number",
          "format": "float",
          "description": "Live weight of the animal in Kg"
        },
        "carcassWeight": {
          "example": 180,
          "type": "number",
          "format": "float",
          "description": "Carcass weight in Kg - only applicable if passport is issued post slaughter."
        },
        "fatScore": {
          "type": "string",
          "enum": ["1", "2", "3", "4", "5", "6"],
          "example": "1",
          "description": "Fat score based on depth of fat at 12th to 13th rib. 1 is lightest and 6 is heaviest. "
        },
        "muscleScore": {
          "type": "string",
          "enum": ["A", "B", "C", "D", "E"],
          "example": "A",
          "description": "Muscle score based on thickness through stifle. A is heaviest, E is lightest."
        },
        "frameSize": {
          "type": "string",
          "enum": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
          "example": "1",
          "description": "Frame size (lookup based on hook height for given age and sex). 1 is the smallest and 11 is the largest."
        },
        "maturity": {
          "type": "string",
          "enum": ["early", "moderate", "late", "veryLate"],
          "example": "early",
          "description": "Maturity type or growth potential is a way of describingthe skeletal size of cattle. Frame score, which is the height of a beef animal at a given age can be used as a measure of its maturity type. Given adequate nutrition and health, most animals should maintain the same frame score and hence maturity type throughout their life, while actual height increases with age."
        }
      },
      "description": "Bovine characteristcs at the date of livestock passport issue - terminology from MLA National Livestiock Guidelines 2022 - https://www.ausmeat.com.au/media/1521/mla-national-livestock-guidelines-2022-web_final_291122.pdf.  "
    },
    "HealthTreatment": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": ["HealthTreatment"],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "HealthTreatment",
                "minContains": 1
              }
            }
          ]
        },
        "icarDiseaseCategory": {
          "type": "string",
          "enum": ["1", "2", "3", "4", "5", "6", "7", "8", "9"],
          "example": "1",
          "description": "The disease category that this treatment targets."
        },
        "treatmentDate": {
          "example": "2024-07-24",
          "type": "string",
          "format": "date",
          "description": "The data the treatment was applied."
        },
        "productId": {
          "type": "string",
          "x-external-enumeration": "https://portal.apvma.gov.au/pubcris",
          "description": "The APVMA product code for the treatment ideally as a resolvable URL\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://portal.apvma.gov.au/pubcris\n    "
        },
        "productBatchId": {
          "example": "https://id.yourbrand.com/01/09312345678907/10/ABC123/21/456789A",
          "type": "string",
          "description": "The batch number of the specific treatment product."
        },
        "productExpiry": {
          "example": "2025-04-20",
          "type": "string",
          "format": "date",
          "description": "The expiry date of the specific treatemtn product batch."
        },
        "productName": {
          "example": "PENEZIN ANTIBIOTIC INJECTION",
          "type": "string",
          "description": "The name of the treatment product"
        },
        "doseRate": {
          "$ref": "#/$defs/Measure",
          "description": "The dose rate for the administered treatment."
        },
        "witholdingPeriod": {
          "example": 5,
          "type": "integer",
          "description": "The pre-slauhghter / pre export witholding period in days for this treatment.  "
        }
      },
      "description": "An animal health treatment record."
    }
  }
}
